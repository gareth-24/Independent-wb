Functional Programming with JS | Whiteboarding Independent Project
Gareth Grindeland
Friday, June 23
----------------------------

//Question #5: Array Sorting
// Write an algorithm that sorts an array without using the sort() method. There are many different sorting algorithms — take the time to read about the following:

// Quick sort
// Merge sort
// Heap sort
// Insertion sort
// Bubble sort
// Selection sort
// You may implement any of the above algorithms (or your own) to solve the problem — as long as it doesn't use sort().

// Example
// Input: [9, 2, 7, 12]
// Output: [2, 7, 9, 12]
--------------------------------
pseudocode:

-ascending order
-integers not strings
-if array length is 1, return the number in an array of length =1

-quick sort is what i will use

Input: [9, 2, 7, 12]

pivot = 9

lowerarray = [2, 7]
--> new pivot = 2
--> new upper array =[7]

upperarray = [12]

base case will be when the array has a length of 1

expected final output = [2, 7, 9, 12]

-----------------

const inputArray = [9, 2, 7, 12]; 

const quickSort = (array) => {
	if (array.length <= 1) {
  	return array;
  }
  
  let pivot = array[0];
  let lowerArray = [];
  let upperArray = [];
  
  for (let i = 1; i < array.length; i++) {
  	if (array[i] < pivot) {
    	lowerArray.push(array[i]);
    } else {
    	upperArray.push(array[i]);
    }
  }
  return [...quickSort(lowerArray), pivot, ...quickSort(upperArray)];
  //this uses the same function as the callback (recursively)
  //spread operator will concatenate the arrays
}

const solution = quickSort(inputArray); //this is the output